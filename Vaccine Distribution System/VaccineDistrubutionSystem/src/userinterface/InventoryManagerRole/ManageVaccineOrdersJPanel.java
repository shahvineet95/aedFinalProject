/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InventoryManagerRole;

import Business.Batch.Batch;
import Business.Batch.BatchDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.Distributor;
import static Business.Enterprise.Enterprise.EnterpriseType.Pharmaceutical;
import Business.Enterprise.PharmaceuticalEnterprise;
import Business.Network.Network;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.Order;
import Business.WorkQueue.RegisterVaccine;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author India
 */
public class ManageVaccineOrdersJPanel extends javax.swing.JPanel {

    /** 
     * Creates new form ManageVaccineOrdersJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private UserAccount account;
    private InventoryOrganization inventoryOrganization;
    private PharmaceuticalEnterprise enterprise;
    private Network network;
    public ManageVaccineOrdersJPanel(JPanel userProcessContainer,Network network, EcoSystem ecosystem,InventoryOrganization organization, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.enterprise = (PharmaceuticalEnterprise) enterprise;
        this.inventoryOrganization = (InventoryOrganization)organization;
        this.network = network;
        populateBatchTable();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proceedBtn = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ManageOrdersJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        batchTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        proceedBtn.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        proceedBtn.setText("Proceed");
        proceedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedBtnActionPerformed(evt);
            }
        });
        add(proceedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 160, 50));

        refreshTestJButton.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 510, 150, 50));

        enterpriseLabel.setFont(new java.awt.Font("Product Sans", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 127, 30));

        valueLabel.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 158, 30));

        ManageOrdersJTable.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        ManageOrdersJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine", "Batches", "Cost", "Hospital", "Created Date", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageOrdersJTable.setRowHeight(24);
        jScrollPane1.setViewportView(ManageOrdersJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 630, 213));

        jButton1.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 120, 50));

        jLabel6.setFont(new java.awt.Font("Product Sans", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Manage Vaccine Orders");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 312, -1));

        batchTable.setFont(new java.awt.Font("Product Sans", 0, 18)); // NOI18N
        batchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "BatchId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        batchTable.setRowHeight(24);
        jScrollPane2.setViewportView(batchTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 270, 300, 213));
    }// </editor-fold>//GEN-END:initComponents

   public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) ManageOrdersJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest w :ecosystem.getCdcOrganization().getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = w.getVaccine().getName();
            row[1] = w.getQuantity();
            row[2] = w.getQuantity()*w.getVaccine().getCost();
            row[3] = w.getSender();
            row[4] = w.getRequestDate();
            row[5] = w;
            row[6] = w.getMessage();
            
            model.addRow(row);
        }
    }
   
   public void populateBatchTable(){
       DefaultTableModel model = (DefaultTableModel) batchTable.getModel();
        model.setRowCount(0);
        System.out.println(""+enterprise.getBatchDir().getBatchStorage());
        for (Batch b :enterprise.getBatchDir().getBatchStorage()) {
            Object[] row = new Object[2];
            row[0] = b.getVaccine().getName(); 
            row[1] = b; 
            model.addRow(row);
        }
   }
   
    private void proceedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedBtnActionPerformed

            int selectedRow = ManageOrdersJTable.getSelectedRow();
            int batchRow = batchTable.getSelectedRow();
        if(selectedRow >= 0){
            if(batchRow >= 0){
                String str1 = JOptionPane.showInputDialog(null, "Your order is placed.Do you want to add addtional message");
            System.out.println(""+selectedRow);
            
           // Batch b = batch.get(batchRow);
            Batch b = (Batch)batchTable.getValueAt(batchRow, 1);
            
            Order w = (Order)ManageOrdersJTable.getValueAt(selectedRow, 5);
            
            w.setSender(account);
            w.setStatus("Order placed");
            w.setMessage(str1);
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
               
               if(e.getEnterpriseType().equals(Distributor)) {
                    System.out.println("AAAA1"+e);
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        System.out.println("A11111AAA1"+o);
                        if(o.toString().equals("Delivery Organization")){
                            System.out.println("Adding it in Delivery organization"+o);
                            o.getWorkQueue().addCreatedWorkrequest(w);
                            JOptionPane.showMessageDialog(null, "Order was placed successfully!");
                           
                            enterprise.getBatchDir().removeBatchStorage(b);
                            batchTable.remove(batchRow);

                        } else {
                            JOptionPane.showMessageDialog(null, "Order could not be placed.");
                        }
                    }
                } 
            }
            }
            else{
                JOptionPane.showMessageDialog(null, "Selected row from both tables");
            }
        }
        
        
    }//GEN-LAST:event_proceedBtnActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateTable();
        populateBatchTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        //Remove batch from batch storage
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ManageOrdersJTable;
    private javax.swing.JTable batchTable;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton proceedBtn;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
